name: Build Examples

on:   
  push: 
    paths: 
    - ./firmware
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        example:
        # - ./firmware/flasher/attiny-flasher-updi
        # - ./firmware/flasher/attiny-flasher-test-reset-states
        # - ./firmware/flasher/attiny-flasher-test-reset-fuses
        - ./firmware/flasher/attiny-serial-demo
        - ./firmware/flasher/attiny-serial-demo-naked
        - ./firmware/flasher/attiny-flasher
        - ./firmware/flasher/attiny-flasher-arduino-isp
        - ./firmware/flasher/attiny-flasher-tpi
        - ./firmware/kits/attiny-led-matrix-rtc-clock-set
        - ./firmware/kits/attiny-rubber-ducky-mouse
        - ./firmware/kits/attiny-ir-messenger-send-receive
        - ./firmware/kits/attiny-traffic-light
        - ./firmware/kits/attiny-bme280-vs-oled
        - ./firmware/kits/attiny-rubber-ducky-keyboard
        - ./firmware/kits/attiny-rainbow-led-demo
        - ./firmware/kits/attiny-led-matrix-game-of-life
        - ./firmware/kits/attiny-ir-messenger-send
        - ./firmware/kits/attiny-rainbow-led-light
        - ./firmware/kits/attiny-led-matrix-rtc-clock
        - ./firmware/kits/attiny-led-matrix-text
        - ./firmware/kits/attiny-led-matrix-demo
        - ./firmware/kits/attiny-rainbow-led
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
    
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          
      - name: Build examples
        run: |
          pio run -d ${{ matrix.example }}
